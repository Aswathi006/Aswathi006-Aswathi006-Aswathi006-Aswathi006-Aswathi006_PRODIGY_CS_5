import scapy.all as scapy

def sniff_packets(interface):
    scapy.sniff(iface=interface, store=False, prn=process_packet)

def process_packet(packet):
    if packet.haslayer(scapy.IP):
        source_ip = packet[scapy.IP].src
        destination_ip = packet[scapy.IP].dst
        protocol = packet[scapy.IP].proto
        print(f"IP Packet: {source_ip} -> {destination_ip} Protocol: {protocol}")

        if packet.haslayer(scapy.TCP):
            payload = packet[scapy.TCP].payload
            print(f"TCP Payload: {payload}")

        elif packet.haslayer(scapy.UDP):
            payload = packet[scapy.UDP].payload
            print(f"UDP Payload: {payload}")

interface = "eth0"  # Change this to your network interface
sniff_packets(interface)
